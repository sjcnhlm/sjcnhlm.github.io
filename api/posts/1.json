{"total":2,"pageSize":10,"pageCount":1,"data":[{"title":"","slug":"markdown基本语法","date":"2019-07-25T04:02:38.366Z","updated":"2019-07-25T05:57:32.966Z","comments":true,"pin":null,"path":"api/articles/markdown基本语法.json","excerpt":"","keywords":null,"cover":"http://tva1.sinaimg.cn/large/0060lm7Tly1g5c1jy1b9sj311y0lcdkk.jpg","content":"<hr>\n<h2 id=\"title-markdown的基本语法和使用\"><a href=\"#title-markdown的基本语法和使用\" class=\"headerlink\" title=\"title:markdown的基本语法和使用\"></a>title:markdown的基本语法和使用</h2><h3 id=\"常用语法\"><a href=\"#常用语法\" class=\"headerlink\" title=\"常用语法\"></a>常用语法</h3><ol>\n<li>使用=和-表示一级和二级标题<br>例如：</li>\n</ol>\n<hr>\n<p>这是一级标题S</p>\n<h2 id><a href=\"#\" class=\"headerlink\" title=\"=\"></a>=</h2><p>二级标题<br>-</p>\n<ol start=\"2\">\n<li>使用 #,可以表示 1-6级 标题</li>\n<li>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车</li>\n<li>引用</li>\n</ol>\n<p>在段落的每行或者只在第一行使用符号 &gt; ,还可使用多个嵌套引用。<br>例如：</p>\n<blockquote>\n<p>区块引用</p>\n<blockquote>\n<p>嵌套引用 </p>\n<blockquote>\n<p>三嵌套引用</p>\n<ol start=\"5\">\n<li>代码区块：</li>\n</ol>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如普通段落：</p>\n<pre><code>public static void main(String[] args)\n{\n    System.out.println(&quot;hello world&quot;);\n}</code></pre><ol start=\"6\">\n<li>强调</li>\n</ol>\n<p><em>斜体</em> <em>斜体</em><br><strong>加粗</strong> </p>\n<ol start=\"7\">\n<li>列表</li>\n</ol>\n<p>使用 . 、+、或- 标记无序列表，如：</p>\n<ul>\n<li>第一项</li>\n</ul>\n<ul>\n<li>第二项</li>\n</ul>\n<ul>\n<li>第三项</li>\n</ul>\n<ul>\n<li>第四项</li>\n</ul>\n<ul>\n<li>第五项</li>\n</ul>\n<ul>\n<li>第六项</li>\n</ul>\n<p>有序列表:用 数字. 来标识有序列表</p>\n<ol>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n</ol>\n<hr>\n<ol start=\"8\">\n<li>分割线：</li>\n</ol>\n<p>分割线最常使用就是三个或以上的 * ，还可aqs以使用-和_。例如：</p>\n<hr>\n<hr>\n<hr>\n<ol start=\"9\">\n<li>链接：</li>\n</ol>\n<p>行内式：<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">GitHub</a><br>    百度：&lt;<a href=\"http://www.baidu.com&gt;\" target=\"_blank\" rel=\"noopener\">www.baidu.com&gt;</a></p>\n<p>参考式：[GitHub][1]<br>[1]:<a href=\"http://github.com\" target=\"_blank\" rel=\"noopener\">http://github.com</a></p>\n<ol start=\"10\">\n<li>图片</li>\n</ol>\n<p>添加图片形式和链接相似，只需要在链接的基础上前方加一个 ！号。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/0060lm7Tly1g5c1jy1b9sj311y0lcdkk.jpg\" alt=\"科比\"></p>\n<ol start=\"11\">\n<li><p>反斜杠：反转义作用。使符号成为普通符号。</p>\n</li>\n<li><p>符号：``</p>\n</li>\n<li><p>表格</p>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>年龄</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>李淼</td>\n<td>22岁</td>\n</tr>\n<tr>\n<td>宋鹏程</td>\n<td>23岁</td>\n</tr>\n<tr>\n<td>罗京</td>\n<td>53岁</td>\n</tr>\n</tbody></table>\n","text":"title:markdown的基本语法和使用常用语法使用=和-表示一级和二级标题<br>例如：这是一级标题S=二级标题<br>-使用 #,可以表示 1-6级 标题段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车引用在段落的每行或者","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"记录第一次搭建博客","slug":"hello-world","date":"2019-07-23T11:00:50.072Z","updated":"2019-07-24T12:54:23.381Z","comments":true,"pin":null,"path":"api/articles/hello-world.json","excerpt":"","keywords":null,"cover":null,"content":"<h2 id=\"基础工作\"><a href=\"#基础工作\" class=\"headerlink\" title=\"基础工作\"></a>基础工作</h2><h3 id=\"1-安装Node-js和配置好Node-js环境，在cmd中命令中，成功界面如下：\"><a href=\"#1-安装Node-js和配置好Node-js环境，在cmd中命令中，成功界面如下：\" class=\"headerlink\" title=\"1.安装Node.js和配置好Node.js环境，在cmd中命令中，成功界面如下：\"></a>1.安装Node.js和配置好Node.js环境，在cmd中命令中，成功界面如下：</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--&gt;node -v</span><br><span class=\"line\">v6.11.1</span><br><span class=\"line\">--&gt;npm -v</span><br><span class=\"line\">6.9.0</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"2-安装git并配置git环境，安装成功的象征就是鼠标右键中出现GIT-GUI-Hrer和GIt-Bash-Here\"><a href=\"#2-安装git并配置git环境，安装成功的象征就是鼠标右键中出现GIT-GUI-Hrer和GIt-Bash-Here\" class=\"headerlink\" title=\"2.安装git并配置git环境，安装成功的象征就是鼠标右键中出现GIT GUI Hrer和GIt Bash Here\"></a>2.安装git并配置git环境，安装成功的象征就是鼠标右键中出现GIT GUI Hrer和GIt Bash Here</h3><h3 id=\"3-在GitHub上创建库，库名必须是账户名-github-io\"><a href=\"#3-在GitHub上创建库，库名必须是账户名-github-io\" class=\"headerlink\" title=\"3.在GitHub上创建库，库名必须是账户名.github.io\"></a>3.在GitHub上创建库，库名必须是账户名.github.io</h3><h3 id=\"4-安装Hexo\"><a href=\"#4-安装Hexo\" class=\"headerlink\" title=\"4.安装Hexo\"></a>4.安装Hexo</h3><h4 id=\"1-在电脑上新建一个blog文件夹，进入该目录下。\"><a href=\"#1-在电脑上新建一个blog文件夹，进入该目录下。\" class=\"headerlink\" title=\"1.在电脑上新建一个blog文件夹，进入该目录下。\"></a>1.在电脑上新建一个blog文件夹，进入该目录下。</h4><h4 id=\"2-输入npm-install-hexo-g，开始安装Hexo\"><a href=\"#2-输入npm-install-hexo-g，开始安装Hexo\" class=\"headerlink\" title=\"2.输入npm install hexo -g，开始安装Hexo\"></a>2.输入<code>npm install hexo -g</code>，开始安装Hexo</h4><h4 id=\"3-输入hexo-v检查hexo是否安装成功\"><a href=\"#3-输入hexo-v检查hexo是否安装成功\" class=\"headerlink\" title=\"3.输入hexo v检查hexo是否安装成功\"></a>3.输入<code>hexo v</code>检查hexo是否安装成功</h4><h4 id=\"4-输入hexo-init初始化该文件夹。这需要一段时间，当看到”-Start-blogging-with-Hexo-表明初始化成功。\"><a href=\"#4-输入hexo-init初始化该文件夹。这需要一段时间，当看到”-Start-blogging-with-Hexo-表明初始化成功。\" class=\"headerlink\" title=\"4.输入hexo init初始化该文件夹。这需要一段时间，当看到” Start blogging with Hexo!表明初始化成功。\"></a>4.输入<code>hexo init</code>初始化该文件夹。这需要一段时间，当看到” Start blogging with Hexo!表明初始化成功。</h4><h4 id=\"5-输入npm-install-安装需要的组件。\"><a href=\"#5-输入npm-install-安装需要的组件。\" class=\"headerlink\" title=\"5.输入npm install 安装需要的组件。\"></a>5.输入<code>npm install</code> 安装需要的组件。</h4><h4 id=\"6-输入hexo-s开启服务器。\"><a href=\"#6-输入hexo-s开启服务器。\" class=\"headerlink\" title=\"6.输入hexo  s开启服务器。\"></a>6.输入<code>hexo  s</code>开启服务器。</h4><h3 id=\"5-将Hexo与Github-page联系起来，这里需要先配置ssh，\"><a href=\"#5-将Hexo与Github-page联系起来，这里需要先配置ssh，\" class=\"headerlink\" title=\"5.将Hexo与Github page联系起来，这里需要先配置ssh，\"></a>5.将Hexo与Github page联系起来，这里需要先配置ssh，</h3><h3 id=\"6-配置Deployment，在其文件夹中，找到-config-yml文件，修改repo值\"><a href=\"#6-配置Deployment，在其文件夹中，找到-config-yml文件，修改repo值\" class=\"headerlink\" title=\"6.配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值\"></a>6.配置Deployment，在其文件夹中，找到_config.yml文件，修改repo值</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:sjcnhlm/sjcnhlm.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"7-新建自己的博客，在cmd下输入exo-new-post-“博客名”，-这时候在文件夹-posts目录下将会看到已经创建的文件。\"><a href=\"#7-新建自己的博客，在cmd下输入exo-new-post-“博客名”，-这时候在文件夹-posts目录下将会看到已经创建的文件。\" class=\"headerlink\" title=\"7.新建自己的博客，在cmd下输入exo new post “博客名”， 这时候在文件夹_posts目录下将会看到已经创建的文件。\"></a>7.新建自己的博客，在cmd下输入<code>exo new post “博客名”</code>， 这时候在文件夹_posts目录下将会看到已经创建的文件。</h3><p>在生成以及部署文章之前，需要安装一个扩展：<br><code>npm install hexo-deployer-git --save</code><br>使用编辑器编好文章，那么就可以使用命令：hexo d -g，生成以及部署了<br>部署成功后访问自己的地址：<a href=\"http://sjcnh.github.io。那么将看到生成的文章\" target=\"_blank\" rel=\"noopener\">http://sjcnh.github.io。那么将看到生成的文章</a></p>\n<h2 id=\"进阶工作\"><a href=\"#进阶工作\" class=\"headerlink\" title=\"进阶工作\"></a>进阶工作</h2><p>之前的工作仅仅是搭建起来一个博客，还没有设置博客的界面，主题等。为了我们的美观，我们需要对主题进行配置。</p>\n<h3 id=\"1-安装主题\"><a href=\"#1-安装主题\" class=\"headerlink\" title=\"1.安装主题\"></a>1.安装主题</h3><p>可以在hexo官方网站，<a href=\"https://hexo.io/themes，找到自己喜欢的主题。然后克隆到themes/next，以next主题为例。\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes，找到自己喜欢的主题。然后克隆到themes/next，以next主题为例。</a><br>具体方法是在blog文件夹中鼠标右键，点击Git Base Here。输入命令：git clone <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>\n<h3 id=\"2-启用主题\"><a href=\"#2-启用主题\" class=\"headerlink\" title=\"2.启用主题\"></a>2.启用主题</h3><p>在站点目录中（blog），打开配置文件_config.yml，修改theme：next<br>这样的话就可以应用next主题。不过这是最原始的next主题，可以根据自己的喜好再去优化它，这里不再赘述。</p>\n","text":"基础工作1.安装Node.js和配置好Node.js环境，在cmd中命令中，成功界面如下：1<br>2<br>3<br>4<br>--&gt;node -v<br>v6.11.1<br>--&gt;npm -v<br>6.9.0<br>2.安装git并配置git环境，安装成功的象","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}